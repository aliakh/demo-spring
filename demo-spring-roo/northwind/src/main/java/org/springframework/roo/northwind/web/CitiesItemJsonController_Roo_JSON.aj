// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.springframework.roo.northwind.web;

import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.roo.northwind.domain.City;
import org.springframework.roo.northwind.service.api.CityService;
import org.springframework.roo.northwind.web.CitiesItemJsonController;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect CitiesItemJsonController_Roo_JSON {
    
    declare @type: CitiesItemJsonController: @RestController;
    
    declare @type: CitiesItemJsonController: @RequestMapping(value = "/api/cities/{city}", name = "CitiesItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private CityService CitiesItemJsonController.cityService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param cityService
     */
    @Autowired
    public CitiesItemJsonController.new(CityService cityService) {
        this.cityService = cityService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return CityService
     */
    public CityService CitiesItemJsonController.getCityService() {
        return cityService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param cityService
     */
    public void CitiesItemJsonController.setCityService(CityService cityService) {
        this.cityService = cityService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return City
     */
    @ModelAttribute
    public City CitiesItemJsonController.getCity(@PathVariable("city") Long id) {
        City city = cityService.findOne(id);
        if (city == null) {
            throw new NotFoundException(String.format("City with identifier '%s' not found",id));
        }
        return city;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param city
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> CitiesItemJsonController.show(@ModelAttribute City city) {
        return ResponseEntity.ok(city);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param city
     * @return UriComponents
     */
    public static UriComponents CitiesItemJsonController.showURI(City city) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(CitiesItemJsonController.class).show(city))
            .buildAndExpand(city.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedCity
     * @param city
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> CitiesItemJsonController.update(@ModelAttribute City storedCity, @Valid @RequestBody City city, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        city.setId(storedCity.getId());
        getCityService().save(city);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param city
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> CitiesItemJsonController.delete(@ModelAttribute City city) {
        getCityService().delete(city);
        return ResponseEntity.ok().build();
    }
    
}
